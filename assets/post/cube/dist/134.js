"use strict";(self.webpackChunkcubing=self.webpackChunkcubing||[]).push([[134],{134:(t,e,s)=>{s.r(e),s.d(e,{EXPERIMENTAL_PUZZLE_BASE_SHAPES:()=>ht,EXPERIMENTAL_PUZZLE_CUT_TYPES:()=>lt,ExperimentalPGNotation:()=>vt,PuzzleGeometry:()=>bt,Quat:()=>Q,getPG3DNamedPuzzles:()=>rt,getPuzzleDescriptionString:()=>at,getPuzzleGeometryByDesc:()=>ft,getPuzzleGeometryByName:()=>ut,parseOptions:()=>D,parsePuzzleDescription:()=>ct,schreierSims:()=>tt});var n=s(399),o=class{constructor(t,e){this.facenames=t,e&&(this.gripnames=e);for(let e=0;this.prefixFree&&e<t.length;e++)for(let s=0;this.prefixFree&&s<t.length;s++)e!==s&&t[e].startsWith(t[s])&&(this.prefixFree=!1)}prefixFree=!0;gripnames=[];setGripNames(t){this.gripnames=t}splitByFaceNames(t){const e=[];let s=0;for(;s<t.length;){s>0&&s<t.length&&"_"===t[s]&&s++;let n=-1;for(let e=0;e<this.facenames.length;e++)t.substr(s).startsWith(this.facenames[e])&&(n<0||this.facenames[e].length>this.facenames[n].length)&&(n=e);if(!(n>=0))throw new Error(`Could not split ${t} into face names.`);e.push(n),s+=this.facenames[n].length}return e}joinByFaceIndices(t){let e="";const s=[];for(let n=0;n<t.length;n++)s.push(e),s.push(this.facenames[t[n]]),this.prefixFree||(e="_");return s.join("")}spinmatch(t,e){if(t===e)return!0;try{const s=this.splitByFaceNames(t),n=this.splitByFaceNames(e);if(s.length!==n.length&&s.length<3)return!1;for(let t=0;t<s.length;t++){for(let e=0;e<t;e++)if(s[t]===s[e])return!1;let e=!1;for(let o=0;o<n.length;o++)if(s[t]===n[o]){e=!0;break}if(!e)return!1}return!0}catch(t){return!1}}spinmatchv(t,e){return t.endsWith("v")&&e.endsWith("v")?this.spinmatch(t.slice(0,t.length-1),e.slice(0,e.length-1)):this.spinmatch(t,e)}unswizzle(t){(t.endsWith("v")||t.endsWith("w"))&&t[0]<="Z"&&(t=t.slice(0,t.length-1));const e=t.toUpperCase();for(let t=0;t<this.gripnames.length;t++){const s=this.gripnames[t];if(this.spinmatch(e,s))return s}return t}},i=class{notationToInternal(t){return t}notationToExternal(t){return t}},r=class{constructor(t,e){this.child=t,this.sw=e}notationToInternal(t){return"T"===t.family&&void 0===t.innerLayer&&void 0===t.outerLayer?new n.yU(new n.VL("FLRv",t.innerLayer,t.outerLayer),t.amount):this.child.notationToInternal(t)}notationToExternal(t){let e=t.family;return e.length>0&&"v"===e[e.length-1]&&(e=e.substring(0,e.length-1)),this.sw.spinmatch(e,"FLUR")?new n.yU(new n.VL("T",t.innerLayer,t.outerLayer),t.amount):this.child.notationToExternal(t)}},a=class{constructor(t,e){this.internalNames=t,this.externalNames=e}convertString(t,e,s){let n="";(t.endsWith("v")||t.endsWith("v"))&&t<="_"&&(n=t.slice(t.length-1),t=t.slice(0,t.length-1));const o=t.toUpperCase();let i=!1;return t!==o&&(i=!0,t=o),t=s.joinByFaceIndices(e.splitByFaceNames(t)),i&&(t=t.toLowerCase()),t+n}convert(t,e,s){const o=t.family,i=this.convertString(o,e,s);return o===i?t:new n.yU(new n.VL(i,t.innerLayer,t.outerLayer),t.amount)}notationToInternal(t){return this.convert(t,this.externalNames,this.internalNames)}notationToExternal(t){return this.convert(t,this.internalNames,this.externalNames)}},h=class{constructor(t){this.child=t}notationToInternal(t){if(void 0===t.innerLayer&&void 0===t.outerLayer){if(1===Math.abs(t.amount)){if("R++"===t.family)return new n.yU(new n.VL("L",3,2),-2*t.amount);if("R--"===t.family)return new n.yU(new n.VL("L",3,2),2*t.amount);if("D++"===t.family)return new n.yU(new n.VL("U",3,2),-2*t.amount);if("D--"===t.family)return new n.yU(new n.VL("U",3,2),2*t.amount);if("R_PLUSPLUS_"===t.family)return new n.yU(new n.VL("L",3,2),-2*t.amount);if("D_PLUSPLUS_"===t.family)return new n.yU(new n.VL("U",3,2),-2*t.amount)}if("y"===t.family)return new n.yU("Uv",t.amount);if("x"===t.family&&2===Math.abs(t.amount))return new n.yU("ERv",t.amount/2)}return this.child.notationToInternal(t)}notationToExternal(t){return"ERv"===t.family&&1===Math.abs(t.amount)?new n.yU(new n.VL("x",t.innerLayer,t.outerLayer),2*t.amount):"ILv"===t.family&&1===Math.abs(t.amount)?new n.yU(new n.VL("x",t.innerLayer,t.outerLayer),2*-t.amount):"Uv"===t.family?new n.yU(new n.VL("y",t.innerLayer,t.outerLayer),t.amount):"Dv"===t.family?new n.yU("y",-t.amount):this.child.notationToExternal(t)}},l=class{constructor(t){this.slices=t}notationToInternal(t){const e=t.family;return t.innerLayer||t.outerLayer||("x"===e?t=new n.yU("Rv",t.amount):"y"===e?t=new n.yU("Uv",t.amount):"z"===e&&(t=new n.yU("Fv",t.amount)),1&~this.slices||("E"===e?t=new n.yU(new n.VL("D",(this.slices+1)/2),t.amount):"M"===e?t=new n.yU(new n.VL("L",(this.slices+1)/2),t.amount):"S"===e&&(t=new n.yU(new n.VL("F",(this.slices+1)/2),t.amount))),this.slices>2&&("e"===e?t=new n.yU(new n.VL("D",this.slices-1,2),t.amount):"m"===e?t=new n.yU(new n.VL("L",this.slices-1,2),t.amount):"s"===e&&(t=new n.yU(new n.VL("F",this.slices-1,2),t.amount)))),t}notationToExternal(t){const e=t.family;if(!t.innerLayer&&!t.outerLayer){if("Rv"===e)return new n.yU("x",t.amount);if("Uv"===e)return new n.yU("y",t.amount);if("Fv"===e)return new n.yU("z",t.amount);if("Lv"===e)return new n.yU("x",-t.amount);if("Dv"===e)return new n.yU("y",-t.amount);if("Bv"===e)return new n.yU("z",-t.amount)}return t}},c={U:"frl",L:"fld",R:"fdr",B:"dlr",u:"FRL",l:"FLD",r:"FDR",b:"DLR",Uv:"FRLv",Lv:"FLDv",Rv:"FDRv",Bv:"DLRv",D:"D",F:"F",BL:"L",BR:"R"},f={U:"FRL",L:"FLD",R:"FDR",B:"DLR",u:"frl",l:"fld",r:"fdr",b:"dlr",Uv:"FRLv",Lv:"FLDv",Rv:"FDRv",Bv:"DLRv",D:"D",F:"F",BL:"L",BR:"R",d:"d",f:"f",bl:"l",br:"r"},u={U:"FRL",L:"FLD",R:"FDR",B:"DLR"},m=new n.VL("y"),p=new n.VL("Dv"),d=class{constructor(t){this.child=t}wcaHack=!1;map=c;notationToInternal(t){if(this.wcaHack&&2===t.innerLayer&&null===t.outerLayer){const e=u[t.family];if(e)return new n.yU(new n.VL(e,t.innerLayer,t.outerLayer),t.amount)}const e=this.map[t.family];return e?new n.yU(new n.VL(e,t.innerLayer,t.outerLayer),t.amount):m.isIdentical(t.quantum)?new n.yU(p,-t.amount):null}notationToExternal(t){if(this.wcaHack&&2===t.innerLayer&&null===t.outerLayer)for(const[e,s]of Object.entries(u))if(this.child.spinmatch(t.family,s))return new n.yU(new n.VL(e,t.innerLayer,t.outerLayer),t.amount);for(const[e,s]of Object.entries(this.map))if(this.child.spinmatch(t.family,s))return new n.yU(new n.VL(e,t.innerLayer,t.outerLayer),t.amount);return p.isIdentical(t.quantum)?new n.yU(m,-t.amount):null}},g=class extends d{wcaHack=!0;constructor(t){super(t),this.map=f}},b={U:"UBL",UL:"ULF",F:"UFR",UR:"URB",B:"DBL",D:"DFR",L:"DLF",R:"DRB",Uv:"UBLv",ULv:"ULFv",Fv:"UFRv",URv:"URBv",Bv:"DBLv",Dv:"DFRv",Lv:"DLFv",Rv:"DRBv"},v=new n.VL("x"),w=new n.VL("Rv"),y=new n.VL("Lv"),L=new n.VL("y"),B=new n.VL("Uv"),F=new n.VL("Dv"),x=new n.VL("z"),R=new n.VL("Fv"),M=new n.VL("Bv"),z=class{constructor(t){this.child=t}notationToInternal(t){if(t.innerLayer||t.outerLayer)return null;const e=b[t.family];return e?new n.yU(new n.VL(e,t.outerLayer,t.innerLayer),t.amount):v.isIdentical(t.quantum)?new n.yU(w,t.amount):L.isIdentical(t.quantum)?new n.yU(B,t.amount):x.isIdentical(t.quantum)?new n.yU(R,t.amount):null}notationToExternal(t){for(const[e,s]of Object.entries(b))if(this.child.spinmatchv(t.family,s))return new n.yU(new n.VL(e,t.innerLayer,t.outerLayer),t.amount);return w.isIdentical(t.quantum)?new n.yU(v,t.amount):y.isIdentical(t.quantum)?new n.yU(v,-t.amount):B.isIdentical(t.quantum)?new n.yU(L,t.amount):F.isIdentical(t.quantum)?new n.yU(L,-t.amount):R.isIdentical(t.quantum)?new n.yU(x,t.amount):M.isIdentical(t.quantum)?new n.yU(x,-t.amount):null}};function D(t){let e=0;const s={};for(;e<t.length&&"-"===t[e][0];){const n=t[e++];if("--rotations"===n)s.addRotations=!0;else if("--allmoves"===n)s.allMoves=!0;else if("--outerblockmoves"===n)s.outerBlockMoves=!0;else if("--vertexmoves"===n)s.vertexMoves=!0;else if("--nocorners"===n)s.includeCornerOrbits=!1;else if("--noedges"===n)s.includeEdgeOrbits=!1;else if("--noorientation"===n)s.fixedOrientation=!0;else if("--nocenters"===n)s.includeCenterOrbits=!1;else if("--omit"===n)s.excludeOrbits=t[e].split(","),e++;else if("--moves"===n)s.moveList=t[e].split(","),e++;else if("--optimize"===n)s.optimizeOrbits=!0;else if("--scramble"===n)s.scrambleAmount=100;else if("--fixcorner"===n)s.fixedPieceType="v";else if("--fixedge"===n)s.fixedPieceType="e";else if("--fixcenter"===n)s.fixedPieceType="f";else if("--orientcenters"===n)s.orientCenters=!0;else{if("--puzzleorientation"!==n)throw new Error(`Bad option: ${n}`);s.puzzleOrientation=JSON.parse(t[e]),e++}}return{puzzleDescription:ct(t.slice(e).join(" ")),options:s}}var U=class{verbosity=0;allMoves=!1;outerBlockMoves;vertexMoves=!1;addRotations=!1;moveList=null;fixedOrientation=!1;fixedPieceType=null;orientCenters=!1;includeCornerOrbits=!0;includeCenterOrbits=!0;includeEdgeOrbits=!0;excludeOrbits=[];optimizeOrbits=!1;grayCorners=!1;grayCenters=!1;grayEdges=!1;puzzleOrientation=null;puzzleOrientations=null;scrambleAmount=0;constructor(t={}){Object.assign(this,t)}},k=[],E=[];function C(t){if(!k[t]){const e=Array(t);for(let s=0;s<t;s++)e[s]=0;k[t]=e}return k[t]}function $(t){if(!E[t]){const e=Array(t);for(let s=0;s<t;s++)e[s]=s;E[t]=e}return E[t]}function O(t,e){return t/function(t,e){if(t>e){const s=t;t=e,e=s}for(;t>0;){const s=e%t;e=t,t=s}return e}(t,e)*e}var I=class t{n;p;constructor(t){this.n=t.length,this.p=t}toString(){return`Perm[${this.p.join(" ")}]`}mul(e){const s=Array(this.n);for(let t=0;t<this.n;t++)s[t]=e.p[this.p[t]];return new t(s)}rmul(e){const s=Array(this.n);for(let t=0;t<this.n;t++)s[t]=this.p[e.p[t]];return new t(s)}inv(){const e=Array(this.n);for(let t=0;t<this.n;t++)e[this.p[t]]=t;return new t(e)}compareTo(t){for(let e=0;e<this.n;e++)if(this.p[e]!==t.p[e])return this.p[e]-t.p[e];return 0}toGap(){const t=new Array,e=new Array(this.n);for(let s=0;s<this.p.length;s++){if(e[s]||this.p[s]===s)continue;const n=new Array;for(let t=this.p[s];!e[t];t=this.p[t])n.push(1+t),e[t]=!0;t.push(`(${n.reverse().join(",")})`)}return t.join("")}toMathematica(){const t=new Array,e=new Array(this.n);for(let s=0;s<this.p.length;s++){if(e[s]||this.p[s]===s)continue;const n=new Array;for(let t=this.p[s];!e[t];t=this.p[t])n.push(1+t),e[t]=!0;t.push(`{${n.reverse().join(",")}}`)}return`Cycles[{${t.join(",")}}]`}order(){let t=1;const e=new Array(this.n);for(let s=0;s<this.p.length;s++){if(e[s]||this.p[s]===s)continue;let n=0;for(let t=s;!e[t];t=this.p[t])n++,e[t]=!0;t=O(t,n)}return t}},P=class{constructor(t,e){this.size=t,this.mod=e}reassemblySize(){return function(t){let e=BigInt(1);for(;t>1;)e*=BigInt(t),t--;return e}(this.size)*BigInt(this.mod)**BigInt(this.size)}},S=0;function T(t,e){const s=n.yU.fromString(e),o=t.notationToExternal(s);return null===o||s===o?e:o.toString()}var A=class t{constructor(t,e,s,n,o,i,r){this.orbitnames=t,this.orbitdefs=e,this.solved=s,this.movenames=n,this.moveops=o,this.isRotation=i,this.forcenames=r}toKTransformationData(t){const e={};for(let s=0;s<this.orbitnames.length;s++)e[this.orbitnames[s]]=t.orbits[s].toKTransformationOrbitData();return e}toKPatternData(t){const e={};for(let s=0;s<this.orbitnames.length;s++)e[this.orbitnames[s]]=t.orbits[s].toKPatternOrbitData();return e}static transformToKTransformationData(t,e){const s={};for(let n=0;n<t.length;n++)s[t[n]]=e.orbits[n].toKTransformationOrbitData();return s}describeSet(t,e,s){const n=this.orbitdefs[t].size,o=new Array(n);for(let t=0;t<n;t++)o[t]=[];for(let e=0;e<this.movenames.length;e++){if(this.isRotation[e])continue;let i=this.movenames[e];this.forcenames[e]||(i=T(s,i),"'"===i[i.length-1]&&(i=i.substring(0,i.length-1)));const r=this.moveops[e].orbits[t];for(let t=0;t<n;t++)r.perm[t]===t&&0===r.ori[t]||o[t].push(i)}for(let t=0;t<n;t++)e.push(`# ${t+1} ${o[t].join(" ")}`)}toKsolve(t,e=new i){const s=[];s.push(`Name ${t}`),s.push("");for(let t=0;t<this.orbitnames.length;t++)s.push(`Set ${this.orbitnames[t]} ${this.orbitdefs[t].size} ${this.orbitdefs[t].mod}`),this.describeSet(t,s,e);s.push(""),s.push("Solved");for(let t=0;t<this.orbitnames.length;t++)this.solved.orbits[t].appendDefinition(s,this.orbitnames[t],!1,!1);s.push("End");for(let t=0;t<this.movenames.length;t++){s.push("");let n=this.movenames[t];this.forcenames[t]||(n=T(e,this.movenames[t]));let o=!1;"'"===n[n.length-1]&&(o=!0,n=n.substring(0,n.length-1)),s.push(`Move ${n}`);for(let e=0;e<this.orbitnames.length;e++)o?this.moveops[t].orbits[e].inv().appendDefinition(s,this.orbitnames[e],!0):this.moveops[t].orbits[e].appendDefinition(s,this.orbitnames[e],!0);s.push("End")}return s}toKPuzzleDefinition(t){const e=[],s={};for(let t=0;t<this.orbitnames.length;t++){e.push({orbitName:this.orbitnames[t],numPieces:this.orbitdefs[t].size,numOrientations:this.orbitdefs[t].mod});const n=this.solved.orbits[t].toKTransformationOrbitData();s[this.orbitnames[t]]={pieces:n.permutation,orientation:n.orientationDelta}}const n={};if(t)for(let t=0;t<this.movenames.length;t++)n[this.movenames[t]]=this.toKTransformationData(this.moveops[t]);return{name:"PG3D #"+ ++S,orbits:e,defaultPattern:s,moves:n}}optimize(){const e=[],s=[],n=[],o=[];for(let t=0;t<this.moveops.length;t++)o.push([]);for(let t=0;t<this.orbitdefs.length;t++){const i=this.orbitdefs[t].mod,r=this.orbitdefs[t].size,a=new K(r),h=new Array(this.orbitdefs[t].size);for(let t=0;t<r;t++)h[t]=!1;for(let e=0;e<this.moveops.length;e++)for(let s=0;s<r;s++)this.moveops[e].orbits[t].perm[s]===s&&0===this.moveops[e].orbits[t].ori[s]||(this.isRotation[e]||(h[s]=!0),a.union(s,this.moveops[e].orbits[t].perm[s]));let l=!0;if(i>1){l=!1;const e=new K(this.orbitdefs[t].size*i);for(let s=0;s<this.moveops.length;s++)for(let n=0;n<r;n++)if(this.moveops[s].orbits[t].perm[n]!==n||0!==this.moveops[s].orbits[t].ori[n])for(let o=0;o<i;o++)e.union(n*i+o,this.moveops[s].orbits[t].perm[n]*i+(o+this.moveops[s].orbits[t].ori[n])%i);for(let t=0;!l&&t<r;t++)for(let s=1;s<i;s++)e.find(t*i)===e.find(t*i+s)&&(l=!0);for(let e=0;!l&&e<r;e++)for(let s=0;s<e;s++)this.solved.orbits[t].perm[e]===this.solved.orbits[t].perm[s]&&(l=!0)}let c=-1,f=!1;for(let e=0;e<this.orbitdefs[t].size;e++)if(h[e]){const t=a.find(e);c<0?c=t:c!==t&&(f=!0)}for(let i=0;i<this.orbitdefs[t].size;i++){if(!h[i])continue;if(a.find(i)!==i)continue;const r=[],c=[];let u=0;for(let e=0;e<this.orbitdefs[t].size;e++)a.find(e)===i&&(r[u]=e,c[e]=u,u++);if(f?e.push(`${this.orbitnames[t]}_p${i}`):e.push(this.orbitnames[t]),l){s.push(new P(u,this.orbitdefs[t].mod)),n.push(this.solved.orbits[t].remapVS(r,u));for(let e=0;e<this.moveops.length;e++)o[e].push(this.moveops[e].orbits[t].remap(r,c,u))}else{s.push(new P(u,1)),n.push(this.solved.orbits[t].remapVS(r,u).killOri());for(let e=0;e<this.moveops.length;e++)o[e].push(this.moveops[e].orbits[t].remap(r,c,u).killOri())}}}return new t(e,s,new G(n),this.movenames,o.map((t=>new j(t))),this.isRotation,this.forcenames)}scramble(t){this.solved=this.solved.mul(this.getScrambleTransformation(t))}getScrambleTransformation(t){t<100&&(t=100);const e=[];for(let t=0;t<this.moveops.length;t++)e[t]=this.moveops[t];for(let t=0;t<e.length;t++){const s=Math.floor(Math.random()*e.length),n=e[t];e[t]=e[s],e[s]=n}t<e.length&&(t=e.length);for(let s=0;s<t;s++){const t=Math.floor(Math.random()*e.length),s=Math.floor(Math.random()*e.length),n=Math.floor(Math.random()*this.moveops.length);e[t]=e[t].mul(e[s]).mul(this.moveops[n]),Math.random()<.1&&(e[t]=e[t].mul(this.moveops[n]))}let s=e[0];for(let t=1;t<e.length;t++)s=s.mul(e[t]);return s}reassemblySize(){let t=BigInt(1);for(let e=0;e<this.orbitdefs.length;e++)t*=this.orbitdefs[e].reassemblySize();return t}},N=class t{constructor(t,e,s){this.perm=t,this.ori=e,this.orimod=s}static ktransformationCache=[];static e(e,s){return new t($(e),C(e),s)}mul(e){const s=this.perm.length,n=new Array(s);if(1===this.orimod){for(let t=0;t<s;t++)n[t]=this.perm[e.perm[t]];return new t(n,this.ori,this.orimod)}{const o=new Array(s);for(let t=0;t<s;t++)n[t]=this.perm[e.perm[t]],o[t]=(this.ori[e.perm[t]]+e.ori[t])%this.orimod;return new t(n,o,this.orimod)}}inv(){const e=this.perm.length,s=new Array(e),n=new Array(e);for(let t=0;t<e;t++)s[this.perm[t]]=t,n[this.perm[t]]=(this.orimod-this.ori[t])%this.orimod;return new t(s,n,this.orimod)}equal(t){const e=this.perm.length;for(let s=0;s<e;s++)if(this.perm[s]!==t.perm[s]||this.ori[s]!==t.ori[s])return!1;return!0}killOri(){const t=this.perm.length;for(let e=0;e<t;e++)this.ori[e]=0;return this.orimod=1,this}toPerm(){const t=this.orimod;if(1===t)return new I(this.perm);const e=this.perm.length,s=new Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;e++)s[n*t+e]=t*this.perm[n]+(this.ori[n]+e)%t;return new I(s)}identicalPieces(){const t=[],e=this.perm.length,s=[];for(let n=0;n<e;n++){const o=this.perm[n];if(void 0===t[o]){const i=[n];t[o]=!0;for(let t=n+1;t<e;t++)this.perm[t]===o&&i.push(t);s.push(i)}}return s}order(){return this.toPerm().order()}isIdentity(){const t=this.perm.length;if(this.perm===$(t)&&this.ori===C(t))return!0;for(let e=0;e<t;e++)if(this.perm[e]!==e||0!==this.ori[e])return!1;return!0}zeroOris(){const t=this.perm.length;if(this.ori===C(t))return!0;for(let e=0;e<t;e++)if(0!==this.ori[e])return!1;return!0}remap(e,s,n){const o=new Array(n),i=new Array(n);for(let t=0;t<n;t++)o[t]=s[this.perm[e[t]]],i[t]=this.ori[e[t]];return new t(o,i,this.orimod)}remapVS(e,s){const n=new Array(s),o=new Array(s);let i=0;const r=[];for(let t=0;t<s;t++){const s=this.perm[e[t]];void 0===r[s]&&(r[s]=i++),n[t]=r[s],o[t]=this.ori[e[t]]}return new t(n,o,this.orimod)}appendDefinition(t,e,s,n=!0){if(!(n&&this.isIdentity()||(t.push(e),t.push(this.perm.map((t=>t+1)).join(" ")),this.zeroOris())))if(s){const e=new Array(this.ori.length);for(let t=0;t<e.length;t++)e[this.perm[t]]=this.ori[t];t.push(e.join(" "))}else t.push(this.ori.join(" "))}toKTransformationOrbitData(){const e=this.perm.length;return this.isIdentity()?(t.ktransformationCache[e]||(t.ktransformationCache[e]={permutation:$(e),orientationDelta:C(e)}),t.ktransformationCache[e]):{permutation:this.perm,orientationDelta:this.ori}}toKPatternOrbitData(){const t=this.perm.length;return{pieces:this.perm,orientation:this.ori,orientationMod:C(t)}}},V=class{constructor(t){this.orbits=t}internalMul(t){const e=[];for(let s=0;s<this.orbits.length;s++)e.push(this.orbits[s].mul(t.orbits[s]));return e}internalInv(){const t=[];for(const e of this.orbits)t.push(e.inv());return t}equal(t){for(let e=0;e<this.orbits.length;e++)if(!this.orbits[e].equal(t.orbits[e]))return!1;return!0}killOri(){for(const t of this.orbits)t.killOri();return this}toPerm(){const t=new Array;let e=0;for(const s of this.orbits){const n=s.toPerm();t.push(n),e+=n.n}const s=new Array(e);e=0;for(const n of t){for(let t=0;t<n.n;t++)s[e+t]=e+n.p[t];e+=n.n}return new I(s)}identicalPieces(){const t=[];let e=0;for(const s of this.orbits){const n=s.orimod,o=s.identicalPieces();for(let s=0;s<o.length;s++)t.push(o[s].map((t=>t*n+e)));e+=n*s.perm.length}return t}order(){let t=1;for(const e of this.orbits)t=O(t,e.order());return t}},j=class t extends V{mul(e){return new t(this.internalMul(e))}mulScalar(t){if(0===t)return this.e();let e=this;for(t<0&&(e=e.inv(),t=-t);!(1&t);)e=e.mul(e),t>>=1;if(1===t)return e;let s=e,n=this.e();for(;t>0;)1&t&&(n=n.mul(s)),t>1&&(s=s.mul(s)),t>>=1;return n}inv(){return new t(this.internalInv())}e(){return new t(this.orbits.map((t=>N.e(t.perm.length,t.orimod))))}},G=class t extends V{mul(e){return new t(this.internalMul(e))}},K=class{constructor(t){this.n=t,this.heads=new Array(t);for(let e=0;e<t;e++)this.heads[e]=e}heads;find(t){let e=this.heads[t];return this.heads[e]===e||(e=this.find(this.heads[e]),this.heads[t]=e),e}union(t,e){const s=this.find(t),n=this.find(e);s<n?this.heads[n]=s:s>n&&(this.heads[s]=n)}},q={"2x2x2":"c f 0","3x3x3":"c f 0.333333333333333","4x4x4":"c f 0.5 f 0","5x5x5":"c f 0.6 f 0.2","6x6x6":"c f 0.666666666666667 f 0.333333333333333 f 0","7x7x7":"c f 0.714285714285714 f 0.428571428571429 f 0.142857142857143","8x8x8":"c f 0.75 f 0.5 f 0.25 f 0","9x9x9":"c f 0.777777777777778 f 0.555555555555556 f 0.333333333333333 f 0.111111111111111","10x10x10":"c f 0.8 f 0.6 f 0.4 f 0.2 f 0","11x11x11":"c f 0.818181818181818 f 0.636363636363636 f 0.454545454545455 f 0.272727272727273 f 0.0909090909090909","12x12x12":"c f 0.833333333333333 f 0.666666666666667 f 0.5 f 0.333333333333333 f 0.166666666666667 f 0","13x13x13":"c f 0.846153846153846 f 0.692307692307692 f 0.538461538461538 f 0.384615384615385 f 0.230769230769231 f 0.0769230769230769","20x20x20":"c f 0 f .1 f .2 f .3 f .4 f .5 f .6 f .7 f .8 f .9","30x30x30":"c f 0 f .066667 f .133333 f .2 f .266667 f .333333 f .4 f .466667 f .533333 f .6 f .666667 f .733333 f .8 f .866667 f .933333","40x40x40":"c f 0 f .05 f .1 f .15 f .2 f .25 f .3 f .35 f .4 f .45 f .5 f .55 f .6 f .65 f .7 f .75 f .8 f .85 f .9 f .95",skewb:"c v 0","master skewb":"c v 0.275","professor skewb":"c v 0 v 0.38","compy cube":"c v 0.915641442663986",helicopter:"c e 0.707106781186547","curvy copter":"c e 0.83",dino:"c v 0.577350269189626","little chop":"c e 0",pyramorphix:"t e 0",mastermorphix:"t e 0.346184634065199",pyraminx:"t v 0.333333333333333 v 1.66666666666667",tetraminx:"t v 0.333333333333333","master pyraminx":"t v 0 v 1 v 2","master tetraminx":"t v 0 v 1","professor pyraminx":"t v -0.2 v 0.6 v 1.4 v 2.2","professor tetraminx":"t v -0.2 v 0.6 v 1.4","royal pyraminx":"t v -0.333333333333333 v 0.333333333333333 v 1 v 1.66666666666667 v 2.33333333333333","royal tetraminx":"t v -0.333333333333333 v 0.333333333333333 v 1 v 1.66666666666667","emperor pyraminx":"t v -0.428571428571429 v 0.142857142857143 v 0.714285714285714 v 1.28571428571429 v 1.85714285714286 v 2.42857142857143","emperor tetraminx":"t v -0.428571428571429 v 0.142857142857143 v 0.714285714285714 v 1.28571428571429 v 1.85714285714286","Jing pyraminx":"t f 0","master pyramorphix":"t e 0.866025403784437",megaminx:"d f 0.7",gigaminx:"d f 0.64 f 0.82",teraminx:"d f 0.64 f 0.76 f 0.88",petaminx:"d f 0.64 f 0.73 f 0.82 f 0.91",examinx:"d f 0.64 f 0.712 f 0.784 f 0.856 f 0.928",zetaminx:"d f 0.64 f 0.7 f 0.76 f 0.82 f 0.88 f 0.94",yottaminx:"d f 0.64 f 0.6914 f 0.7429 f 0.7943 f 0.8457 f 0.8971 f 0.9486",pentultimate:"d f 0","master pentultimate":"d f 0.1","elite pentultimate":"d f 0 f 0.145905",starminx:"d v 0.937962370425399","starminx 2":"d f 0.23606797749979","pyraminx crystal":"d f 0.447213595499989",chopasaurus:"d v 0","big chop":"d e 0","skewb diamond":"o f 0",FTO:"o f 0.333333333333333","master FTO":"o f 0.5 f 0","Christopher's jewel":"o v 0.577350269189626",octastar:"o e 0","Trajber's octahedron":"o v 0.433012701892219","radio chop":"i f 0",icosamate:"i v 0","icosahedron 2":"i v 0.18759247376021","icosahedron 3":"i v 0.18759247376021 e 0","icosahedron static faces":"i v 0.84","icosahedron moving faces":"i v 0.73","Eitan's star":"i f 0.61803398874989","2x2x2 + dino":"c f 0 v 0.577350269189626","2x2x2 + little chop":"c f 0 e 0","dino + little chop":"c v 0.577350269189626 e 0","2x2x2 + dino + little chop":"c f 0 v 0.577350269189626 e 0","megaminx + chopasaurus":"d f 0.61803398875 v 0","starminx combo":"d f 0.23606797749979 v 0.937962370425399"},_=1e-9;function H(t){let e=new Q(0,0,0,0);for(let s=0;s<t.length;s++)e=e.sum(t[s]);return e.smul(1/t.length)}function J(t,e,s,n){const o=n[t].intersect3(n[e],n[s]);if(!o)return o;for(let i=0;i<n.length;i++)if(i!==t&&i!==e&&i!==s){const t=n[i].b*o.b+n[i].c*o.c+n[i].d*o.d;if(n[i].a>0&&t>n[i].a||n[i].a<0&&t<n[i].a)return!1}return o}var Q=class t{constructor(t,e,s,n){this.a=t,this.b=e,this.c=s,this.d=n}mul(e){return new t(this.a*e.a-this.b*e.b-this.c*e.c-this.d*e.d,this.a*e.b+this.b*e.a+this.c*e.d-this.d*e.c,this.a*e.c-this.b*e.d+this.c*e.a+this.d*e.b,this.a*e.d+this.b*e.c-this.c*e.b+this.d*e.a)}toString(){return`Q[${this.a},${this.b},${this.c},${this.d}]`}dist(t){return Math.hypot(this.a-t.a,this.b-t.b,this.c-t.c,this.d-t.d)}len(){return Math.hypot(this.a,this.b,this.c,this.d)}cross(e){return new t(0,this.c*e.d-this.d*e.c,this.d*e.b-this.b*e.d,this.b*e.c-this.c*e.b)}dot(t){return this.b*t.b+this.c*t.c+this.d*t.d}normalize(){const e=Math.sqrt(this.dot(this));return new t(this.a/e,this.b/e,this.c/e,this.d/e)}makenormal(){return new t(0,this.b,this.c,this.d).normalize()}normalizeplane(){const e=Math.hypot(this.b,this.c,this.d);return new t(this.a/e,this.b/e,this.c/e,this.d/e)}smul(e){return new t(this.a*e,this.b*e,this.c*e,this.d*e)}sum(e){return new t(this.a+e.a,this.b+e.b,this.c+e.c,this.d+e.d)}sub(e){return new t(this.a-e.a,this.b-e.b,this.c-e.c,this.d-e.d)}angle(){return 2*Math.acos(this.a)}invrot(){return new t(this.a,-this.b,-this.c,-this.d)}det3x3(t,e,s,n,o,i,r,a,h){return t*(o*h-i*a)+e*(i*r-n*h)+s*(n*a-o*r)}rotateplane(e){const s=e.mul(new t(0,this.b,this.c,this.d)).mul(e.invrot());return s.a=this.a,s}orthogonal(){const e=Math.abs(this.b),s=Math.abs(this.c),n=Math.abs(this.d);return e<s&&e<n?this.cross(new t(0,1,0,0)).normalize():s<e&&s<n?this.cross(new t(0,0,1,0)).normalize():this.cross(new t(0,0,0,1)).normalize()}pointrotation(e){const s=this.normalize();if(e=e.normalize(),s.sub(e).len()<_)return new t(1,0,0,0);let n=s.sum(e);n=n.len()<_?n.orthogonal():n.normalize();const o=s.cross(n);return o.a=s.dot(n),o}unproject(t){return this.sum(t.smul(-this.dot(t)/(this.len()*t.len())))}rotatepoint(t){return t.mul(this).mul(t.invrot())}rotateface(t){return t.map((t=>t.rotatepoint(this)))}intersect3(e,s){const n=this.det3x3(this.b,this.c,this.d,e.b,e.c,e.d,s.b,s.c,s.d);return!(Math.abs(n)<_)&&new t(0,this.det3x3(this.a,this.c,this.d,e.a,e.c,e.d,s.a,s.c,s.d)/n,this.det3x3(this.b,this.a,this.d,e.b,e.a,e.d,s.b,s.a,s.d)/n,this.det3x3(this.b,this.c,this.a,e.b,e.c,e.a,s.b,s.c,s.a)/n)}side(t){return t>_?1:t<-_?-1:0}cutface(t){const e=this.a;let s=0,n=null;for(let n=0;n<t.length;n++)s|=1<<this.side(t[n].dot(this)-e)+1;if(!(5&~s)){n=[];const s=t.map((t=>this.side(t.dot(this)-e)));for(let o=-1;o<=1;o+=2){const i=[];for(let n=0;n<t.length;n++){s[n]!==o&&0!==s[n]||i.push(t[n]);const r=(n+1)%t.length;if(s[n]+s[r]===0&&0!==s[n]){const s=t[n].dot(this)-e,o=s/(s-(t[r].dot(this)-e)),a=t[n].smul(1-o).sum(t[r].smul(o));i.push(a)}}n.push(i)}}return n}cutfaces(t){const e=[];for(let s=0;s<t.length;s++){const n=t[s],o=this.cutface(n);o?(e.push(o[0]),e.push(o[1])):e.push(n)}return e}faceside(t){const e=this.a;for(let s=0;s<t.length;s++){const n=this.side(t[s].dot(this)-e);if(0!==n)return n}throw new Error("Could not determine side of plane in faceside")}sameplane(t){const e=this.normalize(),s=t.normalize();return e.dist(s)<_||e.dist(s.smul(-1))<_}makecut(e){return new t(e,this.b,this.c,this.d)}},W=1e-9;function Z(t,e){const s=[],n=[];for(let o=0;o<e.length;o++){const i=t.rotateplane(e[o]);let r=!1;for(let t=0;t<s.length;t++)if(i.dist(s[t])<W){r=!0;break}r||(s.push(i),n.push(e[o]))}return n}function X(t){const e=[];for(let s=1;s<t.length;s++)for(let n=s+1;n<t.length;n++){const o=J(0,s,n,t);if(o){let t=!1;for(let s=0;s<e.length;s++)if(o.dist(e[s])<W){t=!0;break}t||e.push(o)}}for(;;){let s=!1;for(let n=0;n<e.length;n++){const o=(n+1)%e.length;if(t[0].dot(e[n].cross(e[o]))<0){const t=e[n];e[n]=e[o],e[o]=t,s=!0}}if(!s)break}return e}var Y=class{mult;constructor(){this.mult=[]}multiply(t){for(let e=2;e*e<=t;e++)for(;t%e==0;)void 0!==this.mult[e]?this.mult[e]++:this.mult[e]=1,t/=e;t>1&&(void 0!==this.mult[t]?this.mult[t]++:this.mult[t]=1)}toString(){let t="";for(let e=0;e<this.mult.length;e++)void 0!==this.mult[e]&&(""!==t&&(t+="*"),t+=e,this.mult[e]>1&&(t+=`^${this.mult[e]}`));return t}};function tt(t,e){const s=t[0].p.length,n=function(t){return new I($(t))}(s);let o=[],i=[],r=[],a=[],h=[];function l(t,e,s){a[t].push(e),h[t].push(s);for(let n=0;n<o[t].length;n++)o[t][n]&&c(t,o[t][n].mul(e),s+r[t][n])}function c(t,e,s){const n=e.p[t];if(!o[t][n]){o[t][n]=e,i[t][n]=e.inv(),r[t][n]=s;for(let n=0;n<a[t].length;n++)c(t,e.mul(a[t][n]),s+h[t][n]);return}const f=e.mul(i[t][n]);(function(t){for(let e=t.p.length-1;e>=0;e--){const s=t.p[e];if(s!==e){if(!o[e][s])return!1;t=t.mul(i[e][s])}}return!0})(f)||l(t-1,f,s+r[t][n])}return function(){o=[],i=[],a=[],r=[],h=[];for(let t=0;t<s;t++)o.push([]),i.push([]),r.push([]),a.push([]),h.push([]),o[t][t]=n,i[t][t]=n,r[t][t]=0;let c=0,f=BigInt(1);for(let n=0;n<t.length;n++){l(s-1,t[n],1),f=BigInt(1);let i=0,h=0;const u=[],m=new Y;for(let t=0;t<s;t++){let e=0,n=0;for(let i=0;i<s;i++)o[t][i]&&(e++,n+=r[t][i],t!==i&&c++);i+=a[t].length,f*=BigInt(e),e>1&&m.multiply(e);const l=n/e;u.push(l),h+=l}e(`${n}: sz ${f} T ${i} sol ${h} none ${c} mults ${m.toString()}`)}return f}()}var et=class t{coords;length;constructor(t){this.coords=new Array(3*t.length);for(let e=0;e<t.length;e++)this.coords[3*e]=t[e].b,this.coords[3*e+1]=t[e].c,this.coords[3*e+2]=t[e].d;this.length=t.length}get(t){return new Q(0,this.coords[3*t],this.coords[3*t+1],this.coords[3*t+2])}centermass(){let t=0,e=0,s=0;for(let n=0;n<this.length;n++)t+=this.coords[3*n],e+=this.coords[3*n+1],s+=this.coords[3*n+2];return new Q(0,t/this.length,e/this.length,s/this.length)}rotate(e){const s=[];for(let t=0;t<this.length;t++)s.push(this.get(t).rotatepoint(e));return new t(s)}rotateforward(){const e=[];for(let t=1;t<this.length;t++)e.push(this.get(t));return e.push(this.get(0)),new t(e)}},st=class t{constructor(t,e,s){this.face=t,this.left=e,this.right=s}split(e){const s=e.cutface(this.face);return null!==s&&(void 0===this.left?(this.left=new t(s[0]),this.right=new t(s[1])):(this.left=this.left?.split(e),this.right=this.right?.split(e))),this}collect(t,e){return void 0===this.left?t.push(new et(this.face)):e?(this.left?.collect(t,!1),this.right?.collect(t,!0)):(this.right?.collect(t,!1),this.left?.collect(t,!0)),t}},nt=1e-9,ot={4:{v:["DFR","DLF","DRL","FLR"],e:["FR","LF","DF","DL","RD","RL"],c:["DF","FD","RL","LR"]},6:{v:["URF","UBR","ULB","UFL","DFR","DRB","DBL","DLF"],e:["UF","UR","UB","UL","DF","DR","DB","DL","FR","FL","BR","BL"],c:["UB","LU","FU","RU","BU","DF"]},8:{v:["UBBBRR","URFL","ULBLBB","DBRBBBL","DBLLF","DFRBR"],e:["UL","UBB","UR","BRD","BLD","FD","BRR","FR","FL","BLL","BLBB","BRBB"],c:["BBU","LU","RU","BRD","FD","BLD","DF","UBB"]},12:{v:["URF","UFL","ULBL","UBLBR","UBRR","DEBF","DBFI","DIA","DAC","DCE","LAI","ALF","FCA","CFR","REC","ERBR","BRBFE","BFBRBL","BLIBF","IBLL"],e:["UF","UR","UBR","UBL","UL","ER","EBR","EBF","ED","EC","IBF","IBL","IL","IA","ID","AC","CF","FA","BFBR","BRBL","BLBF","CD","AD","AL","FL","FR","CR","BFD","BRR","BLL"],c:["UF","FU","DBF","BFD","AD","CD","BRU","BLU","LA","RA","EBR","IBL"]},20:{v:["FLPQU","FUGER","FRCAL","HCREI","ISBDH","JSIEG","BSJMK","MQPOK","ONDBK","NOPLA","UQMJG","DNACH"],e:["FU","FL","FR","EG","ER","EI","SJ","SI","SB","KM","KB","KO","PQ","PO","PL","UG","JG","MQ","UQ","HC","HD","ND","NA","JM","CA","AL","CR","HI","DB","NO"],c:["FU","UF","GE","EG","JS","SJ","MK","KM","QP","PQ","LA","AL","RC","CR","IH","HI","BD","DB","ON","NO"]}};function it(t,e){for(let s=0;s<t.length;s++)if(t[s][0].dist(e)<nt)return s;throw new Error("Element not found")}function rt(){return q}function at(t){return q[t]}var ht=["c","t","o","d","i"],lt=["f","v","e"];function ct(t){const e=t.split(/ /).filter(Boolean);if(e.length%2==0)return null;const s=e[0];if("o"!==s&&"c"!==s&&"i"!==s&&"d"!==s&&"t"!==s)return null;const n=[];for(let t=1;t<e.length;t+=2){if("f"!==e[t]&&"v"!==e[t]&&"e"!==e[t])return null;n.push({cutType:e[t],distance:parseFloat(e[t+1])})}return{shape:s,cuts:n}}function ft(t,e={}){const s=ct(t);if(null===s)throw new Error("Could not parse the puzzle description");const n=new bt(s,Object.assign({},{allMoves:!0},e));return n.allstickers(),n.genperms(),n}function ut(t,e){return ft(q[t],e)}function mt(t,e,s){let n=!1;s-e[1]<e[0]&&(t=[t[2],t[3],t[0],t[1]],e=[s-e[1],s-e[0]],n=!0);let o=t[0],i="";if(0===e[0]&&e[1]===s)o=`${o}v`;else if(e[0]===e[1])e[1]>0&&(i=String(e[1]+1));else{if(0!==e[0])throw new Error(`We only support slice and outer block moves right now. ${e}`);o=o.toLowerCase(),e[1]>1&&(i=String(e[1]+1))}return[i+o,n]}function pt(t,e){const s=[];let n=0;for(;n<t.length;){n>0&&n<t.length&&"_"===t[n]&&n++;let o="";for(const s of e)t.substr(n).startsWith(s[1])&&s[1].length>o.length&&(o=s[1]);if(""===o)throw new Error(`Could not split ${t} into face names.`);s.push(o),n+=o.length}return s}function dt(t,e){return[t.b/e,-t.c/e,t.d/e]}function gt(t,e){const s=[],n=t.length;for(let o=0;o<n;o++){const i=dt(t.get(n-o-1),e);s[3*o]=i[0],s[3*o+1]=i[1],s[3*o+2]=i[2]}return s}var bt=class{constructor(t,e){this.puzzleDescription=t,this.options=new U(e),this.options.verbosity>0&&console.log(this.header("# ")),this.create(t)}rotations;baseplanerot;baseplanes;facenames;faceplanes;edgenames;vertexnames;geonormals;moveplanes;moveplanes2;moveplanesets;moveplanenormals;movesetorders;movesetgeos;basefaces;faces;facecentermass;baseFaceCount;stickersperface;shortedge;markedface;cubies;vertexdistance;edgedistance;facetocubie;facetoord;moverotations;facelisthash;cubiesetnames;cubieords;cubiesetnums;cubieordnums;orbitoris;cubievaluemap;cubiesetcubies;cmovesbyslice=[];parsedmovelist;duplicatedFaces=[];duplicatedCubies=[];fixedCubie=-1;net=[];colors=[];swizzler;notationMapper=new i;addNotationMapper="";setReidOrder=!1;options;create(t){const{shape:e,cuts:s}=t;this.moveplanes=[],this.moveplanes2=[],this.faces=[],this.cubies=[];let n=null;switch(e){case"c":n=function(){const t=Math.sqrt(.5);return[new Q(t,t,0,0),new Q(t,0,t,0)]}();break;case"o":n=function(){const t=Math.sqrt(.5);return[new Q(.5,.5,.5,.5),new Q(t,0,0,t)]}();break;case"i":n=function(){let t=1/6+Math.sqrt(5)/6,e=2/3+Math.sqrt(5)/3;const s=Math.sqrt(t*t+e*e);t/=s,e/=s;const n=2*Math.PI/6;return[new Q(Math.cos(n),t*Math.sin(n),e*Math.sin(n),0),new Q(Math.cos(n),-t*Math.sin(n),e*Math.sin(n),0)]}();break;case"t":n=[new Q(.5,.5,.5,.5),new Q(.5,.5,.5,-.5)];break;case"d":n=function(){const t=2*Math.PI/10;let e=.5+.3*Math.sqrt(5),s=.5+.1*Math.sqrt(5);const n=Math.sqrt(e*e+s*s);return e/=n,s/=n,[new Q(Math.cos(t),e*Math.sin(t),s*Math.sin(t),0),new Q(.5,.5,.5,.5)]}();break;default:throw new Error(`Bad shape argument: ${e}`)}this.rotations=function(t){const e=[new Q(1,0,0,0)];for(let s=0;s<e.length;s++)for(let n=0;n<t.length;n++){const o=t[n].mul(e[s]),i=o.smul(-1);let r=!1;for(let t=0;t<e.length;t++)if(o.dist(e[t])<W||i.dist(e[t])<W){r=!0;break}r||e.push(o)}return e}(n),this.options.verbosity&&console.log(`# Rotations: ${this.rotations.length}`);const i=n[0];this.baseplanerot=Z(i,this.rotations);const r=this.baseplanerot.map((t=>i.rotateplane(t)));this.baseplanes=r,this.baseFaceCount=r.length;const h={4:[["F","D","L","R"]],6:[["F","D","L","U","R"],["R","F","","B",""]],8:[["F","D","L","R"],["D","F","BR",""],["BR","D","","BB"],["BB","BR","U","BL"]],12:[["U","F","","","",""],["F","U","R","C","A","L"],["R","F","","","E",""],["E","R","","BF","",""],["BF","E","BR","BL","I","D"]],20:[["R","C","F","E"],["F","R","L","U"],["L","F","A",""],["E","R","G","I"],["I","E","S","H"],["S","I","J","B"],["B","S","K","D"],["K","B","M","O"],["O","K","P","N"],["P","O","Q",""]]}[r.length];this.net=h,this.colors={4:{F:"#44ee00",D:"#f4f400",L:"#ff0000",R:"#2266ff"},6:{U:"#ffffff",F:"#44ee00",R:"#ff0000",D:"#f4f400",B:"#2266ff",L:"#ff8000"},8:{U:"#ffffff",F:"#44ee00",R:"#ff0000",D:"#f4f400",BB:"#2266ff",L:"#8800dd",BL:"#ff8000",BR:"#aaaaaa"},12:{U:"#ffffff",F:"#008800",R:"#ff0000",C:"#e8d0a0",A:"#3399ff",L:"#8800dd",E:"#ff66cc",BF:"#99ff00",BR:"#0000ff",BL:"#f4f400",I:"#ff8000",D:"#aaaaaa"},20:{R:"#db69f0",C:"#178fde",F:"#23238b",E:"#9cc726",L:"#2c212d",U:"#177fa7",A:"#e0de7f",G:"#2b57c0",I:"#41126b",S:"#4b8c28",H:"#7c098d",J:"#7fe7b4",B:"#85fb74",K:"#3f4bc3",D:"#0ff555",M:"#f1c2c8",O:"#58d340",P:"#c514f2",N:"#14494e",Q:"#8b1be1"}}[r.length],this.options.verbosity>0&&console.log(`# Base planes: ${r.length}`);const l=X(r),c=new Q(0,0,0,0);this.options.verbosity>0&&console.log(`# Face vertices: ${l.length}`);const f=r[0].makenormal(),u=l[0].sum(l[1]).makenormal(),m=l[0].makenormal(),p=new Q(1,f.b,f.c,f.d);this.options.verbosity>0&&console.log(`# Boundary is ${p}`);const d=X(Z(p,this.rotations).map((t=>p.rotateplane(t))));this.edgedistance=d[0].sum(d[1]).smul(.5).dist(c),this.vertexdistance=d[0].dist(c);const g=[],b=[];let v=!1,w=!1,y=!1;for(const t of s){let e=null,s=0;switch(t.cutType){case"f":e=f,s=1,v=!0;break;case"v":e=m,s=this.vertexdistance,y=!0;break;case"e":e=u,s=this.edgedistance,w=!0;break;default:throw new Error(`Bad cut argument: ${t.cutType}`)}g.push(e.makecut(t.distance)),b.push(t.distance<s)}this.options.addRotations&&(v||g.push(f.makecut(10)),y||g.push(m.makecut(10)),w||g.push(u.makecut(10))),this.basefaces=[];for(const t of this.baseplanerot){const e=t.rotateface(d);this.basefaces.push(new et(e))}const L=[],B=[],F=[],x=[],R=d.length;function M(t,e,s){for(const n of t)if(n[0].dist(e)<nt)return void n.push(s);t.push([e,s])}for(let t=0;t<this.baseplanerot.length;t++){const e=this.baseplanerot[t].rotateface(d);for(let s=0;s<e.length;s++){const n=(s+1)%e.length;M(x,e[s].sum(e[n]).smul(.5),t)}}const z=[];for(let t=0;t<this.baseplanerot.length;t++){const e=this.baseplanerot[t].rotateface(d),s=[];for(let n=0;n<e.length;n++){const o=(n+1)%e.length,i=x[it(x,e[n].sum(e[o]).smul(.5))];if(t===i[1])s.push(i[2]);else{if(t!==i[2])throw new Error("Could not find edge");s.push(i[1])}}z.push(s)}const D={},U=[];U.push(h[0][0]),D[h[0][0]]=0,U[z[0][0]]=h[0][1],D[h[0][1]]=z[0][0];for(const t of h){const e=D[t[0]];if(void 0===e)throw new Error("Bad edge description; first edge not connected");let s=-1;for(let n=0;n<z[e].length;n++){const o=U[z[e][n]];if(void 0!==o&&o===t[1]){s=n;break}}if(s<0)throw new Error("First element of a net not known");for(let n=2;n<t.length;n++){if(""===t[n])continue;const o=z[e][(n+s-1)%R],i=U[o];if(void 0!==i&&i!==t[n])throw new Error("Face mismatch in net");U[o]=t[n],D[t[n]]=o}}for(let t=0;t<this.baseplanerot.length;t++){const e=this.baseplanerot[t].rotateface(d),s=p.rotateplane(this.baseplanerot[t]),n=U[t];L.push([e,n]),B.push([s,n])}for(let t=0;t<this.baseplanerot.length;t++){const e=this.baseplanerot[t].rotateface(d),s=U[t];for(let t=0;t<e.length;t++){const n=(t+1)%e.length,o=e[t].sum(e[n]).smul(.5),i=(t+2)%e.length,r=e[n].sum(e[i]).smul(.5),a=it(x,o),h=it(x,r);M(F,e[n],[s,h,a])}}this.swizzler=new o(L.map((t=>t[1])));const k=this.swizzler.prefixFree?"":"_",E=ot[this.baseFaceCount],C=[];for(let t=0;t<this.baseFaceCount;t++)C[1<<t]=t;{const t=E.v;for(const e of t){const t=this.swizzler.splitByFaceNames(e);let s=0;for(const e of t)s|=1<<e;C[s]=t[0]}}{const t=E.e;for(const e of t){const t=this.swizzler.splitByFaceNames(e);let s=0;for(const e of t)s|=1<<e;C[s]=t[0]}}{const t=E.c;for(const e of t){const t=this.swizzler.splitByFaceNames(e);C[1<<t[0]|1<<this.baseFaceCount]=t[1]}}for(let t=0;t<x.length;t++){if(3!==x[t].length)throw new Error(`Bad length in edge names ${x[t]}`);const e=x[t][1],s=x[t][2];let n=U[e];const o=U[s];n=C[1<<e|1<<s]===e?n+k+o:o+k+n,x[t]=[x[t][0],n]}for(let t=0;t<F.length;t++){let e=0;if(F[t].length<4)throw new Error("Bad length in vertex names");for(let s=1;s<F[t].length;s++)e|=1<<D[F[t][s][0]];const s=C[e];let n=-1;for(let e=1;e<F[t].length;e++)s===D[F[t][e][0]]&&(n=e);if(n<0)throw new Error("Internal error; couldn't find face name when fixing corners");let o="";for(let e=1;e<F[t].length;e++){o=1===e?F[t][n][0]:o+k+F[t][n][0];for(let e=1;e<F[t].length;e++)if(F[t][n][1]===F[t][e][2]){n=e;break}}F[t]=[F[t][0],o]}this.markedface=C,this.options.verbosity>1&&(console.log(`# Face names: ${L.map((t=>t[1])).join(" ")}`),console.log(`# Edge names: ${x.map((t=>t[1])).join(" ")}`),console.log(`# Vertex names: ${F.map((t=>t[1])).join(" ")}`));const $=[];for(const t of B)$.push([t[0].makenormal(),t[1],"f"]);for(const t of x)$.push([t[0].makenormal(),t[1],"e"]);for(const t of F)$.push([t[0].makenormal(),t[1],"v"]);this.facenames=L,this.faceplanes=B,this.edgenames=x,this.vertexnames=F,this.geonormals=$;const O=$.map((t=>t[1]));this.swizzler.setGripNames(O),this.options.verbosity>0&&console.log(`# Distances: face 1 edge ${this.edgedistance} vertex ${this.vertexdistance}`);for(let t=0;t<g.length;t++)for(const e of this.rotations){const s=g[t].rotateplane(e);let n=!1;for(const t of this.moveplanes)if(s.sameplane(t)){n=!0;break}n||(this.moveplanes.push(s),b[t]&&this.moveplanes2.push(s))}let I=new st(d);const P=this.moveplanes2.slice();let S=31;for(let t=0;t<P.length;t++){const e=t+Math.floor((P.length-t)*(S/65536));I=I.split(P[e]),P[e]=P[t],S=(1657*S+101)%65536}const T=I.collect([],!0);this.faces=T,this.options.verbosity>0&&console.log(`# Faces is now ${T.length}`),this.stickersperface=T.length;const A=[],N=H(d);for(const t of this.rotations){const e=t.rotateface(d);N.dist(H(e))<nt&&A.push(t)}const V=new Array(T.length),j=[];for(let t=0;t<T.length;t++){const e=T[t].centermass();j.push([N.dist(e),e,t])}j.sort(((t,e)=>t[0]-e[0]));for(let t=0;t<T.length;t++){const e=j[t][2];if(!V[e]){V[e]=!0;for(const s of A){const n=T[e].rotate(s),o=n.centermass();for(let e=t+1;e<T.length&&!(j[e][0]-j[t][0]>nt);e++){const t=j[e][2];if(!V[t]&&o.dist(j[e][1])<nt){V[t]=!0,T[t]=n;break}}}}}this.shortedge=1e99;for(const t of T)for(let e=0;e<t.length;e++){const s=(e+1)%t.length,n=t.get(e).dist(t.get(s));n<this.shortedge&&(this.shortedge=n)}this.options.verbosity>0&&console.log(`# Short edge is ${this.shortedge}`),"c"!==e||!v||w||y||(this.addNotationMapper="NxNxNCubeMapper",this.setReidOrder=!0),"c"!==e||!y||v||w||(this.addNotationMapper="SkewbMapper"),"t"!==e||!y&&!v||w||(this.addNotationMapper="PyraminxOrTetraminxMapper"),"o"===e&&v&&(this.notationMapper=new a(this.swizzler,new o(["F","D","L","BL","R","U","BR","B"])),w||y||(this.addNotationMapper="FTOMapper")),"d"===e&&v&&(this.addNotationMapper="MegaminxMapper",this.notationMapper=new a(this.swizzler,new o(["U","F","L","BL","BR","R","FR","FL","DL","B","DR","D"])))}keyface(t){return this.keyface2(t.centermass())}keyface2(t){let e="";const s=String.fromCharCode;for(const n of this.moveplanesets)if(n.length>0){const o=t.dot(n[0]);let i=0,r=1;for(;2*r<=n.length;)r*=2;for(;r>0;r>>=1)i+r<=n.length&&o>n[i+r-1].a&&(i+=r);if(i<47)e+=s(33+i);else if(i<2256)e=e+s(80+Math.floor(i/47)-1)+s(33+i%47);else{if(!(i<106079))throw Error("Too many slices for cubie encoding");e=e+s(80+Math.floor((i-47)/2209-1))+s(80+Math.floor((i-47)/47)%47)+s(33+i%47)}}return e}keyface3(t){const e=t.centermass(),s=[];for(const t of this.moveplanesets)if(t.length>0){const n=e.dot(t[0]);let o=0,i=1;for(;2*i<=t.length;)i*=2;for(;i>0;i>>=1)o+i<=t.length&&n>t[o+i-1].a&&(o+=i);s.push(o)}return s}findface(t){const e=this.keyface2(t),s=this.facelisthash.get(e);if(1===s.length)return s[0];for(let n=0;n+1<s.length;n++){const s=this.facelisthash.get(e)[n];if(Math.abs(t.dist(this.facecentermass[s]))<nt)return s}return s[s.length-1]}project2d(t,e,s){const n=this.facenames[t][0],o=(e+1)%n.length,i=this.baseplanes[t];let r=n[o].sub(n[e]);const a=r.len();r=r.normalize();const h=r.cross(i).normalize();let l=s[1].sub(s[0]);const c=l.len()/a;l=l.normalize();const f=l.b,u=l.c,m=r.smul(f).sub(h.smul(u)).smul(c),p=h.smul(f).sum(r.smul(u)).smul(c),d=new Q(0,s[0].b-m.dot(n[e]),s[0].c-p.dot(n[e]),0);return[m,p,d]}allstickers(){this.faces=function(t,e){const s=[];for(const n of t)for(const t of e)s.push(t.rotate(n));return s}(this.baseplanerot,this.faces),this.options.verbosity>0&&console.log(`# Total stickers is now ${this.faces.length}`),this.facecentermass=new Array(this.faces.length);for(let t=0;t<this.faces.length;t++)this.facecentermass[t]=this.faces[t].centermass();const t=[],e=[];for(const s of this.moveplanes){const n=s.makenormal();let o=!1;for(const t of e)n.sameplane(t.makenormal())&&(o=!0);o||(e.push(n),t.push([]))}for(const s of this.moveplanes2){const n=s.makenormal();for(let o=0;o<e.length;o++)if(n.sameplane(e[o])){t[o].push(s);break}}for(let s=0;s<t.length;s++){const n=t[s].map((t=>t.normalizeplane())),o=e[s];for(let t=0;t<n.length;t++)n[t].makenormal().dist(o)>nt&&(n[t]=n[t].smul(-1));n.sort(((t,e)=>t.a-e.a)),t[s]=n}this.moveplanesets=t,this.moveplanenormals=e;const s=t.map((t=>t.length));this.options.verbosity>0&&console.log(`# Move plane sets: ${s}`);const n=[];for(let e=0;e<t.length;e++)n.push([]);for(const s of this.rotations){if(Math.abs(Math.abs(s.a)-1)<nt)continue;const o=s.makenormal();for(let i=0;i<t.length;i++)if(o.sameplane(e[i])){n[i].push(s);break}}this.moverotations=n;for(let t=0;t<n.length;t++){const s=n[t],o=s[0].makenormal();for(let t=0;t<s.length;t++)o.dist(s[t].makenormal())>nt&&(s[t]=s[t].smul(-1));s.sort(((t,e)=>t.angle()-e.angle())),n[t][0].dot(e[t])<0&&s.reverse()}const o=n.map((t=>1+t.length));this.movesetorders=o;const i=[];let a="?";for(let s=0;s<t.length;s++){const n=e[s];let o=null,c=null;for(const t of this.geonormals){const e=n.dot(t[0]);Math.abs(e-1)<nt?(c=[t[1],t[2]],a=t[2]):Math.abs(e+1)<nt&&(o=[t[1],t[2]],a=t[2])}if(null===c||null===o)throw new Error("Saw positive or negative sides as null");i.push([c[0],c[1],o[0],o[1],1+t[s].length]),"NxNxNCubeMapper"===this.addNotationMapper&&"f"===a&&(this.notationMapper=new l(1+t[s].length),this.addNotationMapper=""),"SkewbMapper"===this.addNotationMapper&&1===t[0].length&&(this.notationMapper=new z(this.swizzler),this.addNotationMapper=""),"PyraminxOrTetraminxMapper"===this.addNotationMapper&&(2===t[0].length&&.333333333333333===t[0][0].a&&1.66666666666667===t[0][1].a?(this.notationMapper=new d(this.swizzler),this.addNotationMapper=""):(this.notationMapper=new g(this.swizzler),this.addNotationMapper="")),"MegaminxMapper"===this.addNotationMapper&&"f"===a&&(1+t[s].length===3&&(this.notationMapper=new h(this.notationMapper)),this.addNotationMapper=""),"FTOMapper"===this.addNotationMapper&&"f"===a&&(1+t[s].length===3&&(this.notationMapper=new r(this.notationMapper,this.swizzler)),this.addNotationMapper="")}this.movesetgeos=i;const c=new Map,f=this.faces;for(let t=0;t<f.length;t++){const e=f[t],s=this.keyface(e);if(c.get(s)){const e=c.get(s);if(e.push(t),e.length===this.baseFaceCount){this.options.verbosity>0&&console.log("# Splitting core.");for(let t=0;t<e.length;t++){const n=`${s} ${t}`;c.set(n,[e[t]])}}}else c.set(s,[t])}this.facelisthash=c,this.options.verbosity>0&&console.log(`# Cubies: ${c.size}`);const u=[],m=[],p=[];for(const t of c.values())if(t.length!==this.baseFaceCount){if(t.length>1){const e=t.map((t=>f[t].centermass())),s=H(e);for(let n=0;t.length>2;n++){let o=!1;for(let n=0;n<t.length;n++){const i=(n+1)%t.length;if(s.dot(e[n].cross(e[i]))<0){const s=e[n];e[n]=e[i],e[i]=s;const r=t[n];t[n]=t[i],t[i]=r,o=!0}}if(!o)break;if(n>1e3)throw new Error("Bad epsilon math; too close to border")}let n=0;for(const e of t)n|=1<<Math.floor(e/this.stickersperface);const o=this.markedface[n];let i=-1;for(let e=0;e<t.length;e++)Math.floor(t[e]/this.stickersperface)===o&&(i=e);if(i<0)throw new Error("Could not find marked face in list");if(0!==i){const e=t.slice();for(let s=0;s<t.length;s++)t[s]=e[(i+s)%t.length]}}for(let e=0;e<t.length;e++){const s=t[e];m[s]=u.length,p[s]=e}u.push(t)}this.cubies=u,this.facetocubie=m,this.facetoord=p;const b=["?","CENTERS","EDGES","CORNERS","C4RNER","C5RNER"],v=[],w=[0,0,0,0,0,0],y=[],L=[];let B=0;const F=[],x=[],R=[],M=[],D=t=>u[t].map((t=>this.getfaceindex(t))).join(" "),U=[];for(let t=0;t<u.length;t++){const e=u[t];if(0===e.length)continue;if(L[t])continue;const s={};let o=0;R.push(0),U.push([]);const i=e.length,r=w[i]++;let a=b[i];void 0!==a&&i!==this.baseFaceCount||(a="CORE"),a+=0===r?"":r+1,v[B]=a,y[B]=i;const h=[t];let l=0;for(L[t]=!0;l<h.length;){const t=h[l++],i=D(t);if((e.length>1||void 0===s[i])&&(s[i]=o++),M[t]=s[i],F[t]=B,U[B].push(t),x[t]=R[B]++,h.length<this.rotations.length){const e=this.facecentermass[u[t][0]];for(const t of n){const s=this.facetocubie[this.findface(e.rotatepoint(t[0]))];L[s]||(h.push(s),L[s]=!0)}}}B++}if(this.setReidOrder&&4<=this.stickersperface&&this.stickersperface<=9){const t=[["UF","UR","UB","UL","DF","DR","DB","DL","FR","FL","BR","BL"],["UFR","URB","UBL","ULF","DRF","DFL","DLB","DBR"],["U","L","F","R","B","D"]],e={};for(const s of t)for(let t=0;t<s.length;t++){let n=0;for(let e=0;e<s[t].length;e++)n|=1<<s[t].charCodeAt(e)-65;e[n]=t}for(const t of U)for(const s of t){let t=0;for(const e of u[s])t|=1<<this.facenames[this.getfaceindex(e)][1].charCodeAt(0)-65;x[s]=e[t]}}if(this.cubiesetnums=F,this.cubieordnums=x,this.cubiesetnames=v,this.cubieords=R,this.orbitoris=y,this.cubievaluemap=M,this.cubiesetcubies=U,null!==this.options.fixedPieceType){for(let t=0;t<u.length;t++)if("v"===this.options.fixedPieceType&&u[t].length>2||"e"===this.options.fixedPieceType&&2===u[t].length||"f"===this.options.fixedPieceType&&1===u[t].length){this.fixedCubie=t;break}if(this.fixedCubie<0)throw new Error(`Could not find a cubie of type ${this.options.fixedPieceType} to fix.`)}this.options.verbosity>0&&console.log(`# Cubie orbit sizes ${R}`)}unswizzle(t){const e=this.notationMapper.notationToInternal(t);return null===e?null:e.modified({family:this.swizzler.unswizzle(e.family)})}stringToBlockMove(t){const e=t.match(/^(([0-9]+)-)?([0-9]+)?([^0-9]+)([0-9]+'?)?$/);if(null===e)throw new Error(`Bad move passed ${t}`);const s=e[4];let o,i;if(void 0!==e[2]){if(void 0===e[3])throw new Error("Missing second number in range");o=parseInt(e[2],10)}void 0!==e[3]&&(i=parseInt(e[3],10));let r="1",a=1;return void 0!==e[5]&&(r=e[5],"'"===r[0]&&(r=`-${r.substring(1)}`),a=parseInt(r,10)),new n.yU(new n.VL(s,i,o),a)}parseMove(t){const e=this.notationMapper.notationToInternal(t);if(null===e)throw new Error(`Bad move ${t.family}`);let s,n=(t=e).family,o=!1;if(n.endsWith("v")&&n[0]<="Z"){if(void 0!==t.innerLayer||void 0!==t.outerLayer)throw new Error("Cannot use a prefix with full cube rotations");n=n.slice(0,-1),o=!0}n.endsWith("w")&&n[0]<="Z"&&(n=n.slice(0,-1).toLowerCase());let i=-1;const r=this.swizzler.unswizzle(n);let a=!1;for(let t=0;t<this.movesetgeos.length;t++){const e=this.movesetgeos[t];r===e[0]&&(a=!0,s=e,i=t),r===e[2]&&(a=!1,s=e,i=t)}let h=1,l=1;if(n.toUpperCase()!==n&&(l=2),void 0===s)throw new Error(`Bad grip in move ${t.family}`);if(void 0!==t.outerLayer&&(h=t.outerLayer),void 0!==t.innerLayer&&(void 0===t.outerLayer?(l=t.innerLayer,h=n<="Z"?l:1):l=t.innerLayer),h--,l--,o&&(h=0,l=this.moveplanesets[i].length),h<0||h>this.moveplanesets[i].length||l<0||l>this.moveplanesets[i].length)throw new Error(`Bad slice spec ${h} ${l} vs ${this.moveplanesets[i].length}`);if(0===h&&l===this.moveplanesets[i].length&&!o)throw new Error("! full puzzle rotations must be specified with v suffix.");return[void 0,i,h,l,a,t.amount]}parsemove(t){const e=this.parseMove(this.stringToBlockMove(t));return e[0]=t,e}genperms(){if(this.cmovesbyslice.length>0)return;const t=[];if(this.options.orientCenters)for(let t=0;t<this.cubies.length;t++)if(1===this.cubies[t].length){const e=this.cubies[t][0],s=this.getfaceindex(e),n=this.basefaces[s].centermass();if(n.dist(this.facecentermass[e])<nt){const o=1<<s|1<<this.baseFaceCount,i=this.markedface[o],r=this.baseplanes[i].makenormal();let a=-1,h=-1;for(let t=0;t<this.faces[e].length;t++){const s=this.faces[e].get(t),o=r.dot(s.sub(n));o>a&&(a=o,h=t)}const l=(h+1)%this.faces[e].length;if(Math.abs(r.dot(this.faces[e].get(l).sub(n))-a)<nt&&(h=l),0!==h){const t=[];for(let s=0;s<this.faces[e].length;s++)t.push(this.faces[e].get((s+h)%this.faces[e].length));this.faces[e]=new et(t)}const c=this.basefaces[s].length;for(let e=1;e<c;e++)this.cubies[t].push(this.cubies[t][e-1]);this.duplicatedFaces[e]=c,this.duplicatedCubies[t]=c,this.orbitoris[this.cubiesetnums[t]]=c}}for(let e=0;e<this.moveplanesets.length;e++){const s=this.moveplanesets[e],n=[],o=[s.length+1,0];let i=1;for(;2*i<=s.length;)i*=2;for(let t=0;t<this.faces.length;t++){let e=0;if(s.length>0){const n=this.facecentermass[t].dot(s[0]);for(let t=i;t>0;t>>=1)e+t<=s.length&&n>s[e+t-1].a&&(e+=t);e=s.length-e}for(n.push(e);o.length<=e;)o.push(0);o[e]++}const r=new Array(o.length);for(let t=0;t<o.length;t++)r[t]=[];const a=[];for(let t=0;t<this.faces.length;t++){if(n[t]<0)continue;const s=[this.facetocubie[t],this.facetoord[t]];let o=this.facecentermass[t];const i=o;let h=t;const l=n[h];for(;;){n[h]=-1;const t=o.rotatepoint(this.moverotations[e][0]);if(t.dist(i)<nt)break;h=this.findface(t),s.push(this.facetocubie[h],this.facetoord[h]),o=t}if(s.length>2&&this.options.orientCenters&&(1===this.cubies[s[0]].length||this.duplicatedCubies[s[0]]>1)&&this.facecentermass[t].dist(this.basefaces[this.getfaceindex(t)].centermass())<nt){let t=this.faces[this.cubies[s[0]][0]];for(let n=0;n<s.length;n+=2){const o=this.faces[this.cubies[s[n]][0]];let i=-1;for(let e=0;e<t.length;e++)if(o.get(e).dist(t.get(0))<nt){i=e;break}if(i<0)throw new Error("Couldn't find rotation of center faces; ignoring for now.");s[n+1]=i,t=t.rotate(this.moverotations[e][0])}}if(2===s.length&&this.options.orientCenters){const n=this.facecentermass[t].dot(this.moveplanenormals[e]);for(let t=1;t<this.movesetorders[e];t++)n>0?s.push(s[0],t):s.push(s[0],(this.movesetorders[e]-t)%this.movesetorders[e])}if(s.length>2&&!a[s[0]]){if(s.length!==2*this.movesetorders[e])throw new Error("Bad length in perm gen");for(const t of s)r[l].push(t)}for(let t=0;t<s.length;t+=2)a[s[t]]=!0}for(let t=0;t<r.length;t++)r[t]=r[t].slice();t.push(r)}if(this.cmovesbyslice=t,this.options.moveList){const t=[];for(const e of this.options.moveList)t.push(this.parsemove(e));this.parsedmovelist=t}this.facelisthash.clear(),this.facecentermass=[]}getboundarygeometry(){return{baseplanes:this.baseplanes,facenames:this.facenames,faceplanes:this.faceplanes,vertexnames:this.vertexnames,edgenames:this.edgenames,geonormals:this.geonormals}}getmovesets(t){const e=this.moveplanesets[t].length;let s=[];if(void 0!==this.parsedmovelist)for(const n of this.parsedmovelist)n[1]===t&&(n[4]?s.push([n[2],n[3]]):s.push([e-n[3],e-n[2]]),s.push(n[5]));else if(this.options.vertexMoves&&!this.options.allMoves){const n=this.movesetgeos[t];if(n[1]!==n[3])for(let t=0;t<e;t++)"v"!==n[1]?(this.options.outerBlockMoves?s.push([t+1,e]):s.push([t+1]),s.push(1)):(this.options.outerBlockMoves?s.push([0,t]):s.push([t,t]),s.push(1))}else for(let t=0;t<=e;t++)(this.options.allMoves||t+t!==e)&&(this.options.outerBlockMoves?t+t>e?s.push([t,e]):s.push([0,t]):s.push([t,t]),s.push(1));if(this.fixedCubie>=0){const n=this.keyface3(this.faces[this.cubies[this.fixedCubie][0]])[t],o=[];for(let t=0;t<s.length;t+=2){let i=s[t];if(n>=i[0]&&n<=i[1])if(0===i[0])i=[i[1]+1,e];else{if(e!==i[1])throw Error("fixed cubie option would disconnect move");i=[0,i[0]-1]}let r=!1;for(let e=0;e<o.length;e+=2)if(o[e][0]===i[0]&&o[e][1]===i[1]&&o[e+1]===s[t+1]){r=!0;break}r||(o.push(i),o.push(s[t+1]))}s=o}return s}graybyori(t){let e=this.cubies[t].length;return this.duplicatedCubies[t]&&(e=1),1===e&&(this.options.grayCenters||!this.options.includeCenterOrbits)||2===e&&(this.options.grayEdges||!this.options.includeEdgeOrbits)||e>2&&(this.options.grayCorners||!this.options.includeCornerOrbits)}skipbyori(t){let e=this.cubies[t].length;return this.duplicatedCubies[t]&&(e=1),1===e&&!this.options.includeCenterOrbits||2===e&&!this.options.includeEdgeOrbits||e>2&&!this.options.includeCornerOrbits}skipcubie(t){return this.skipbyori(t)}header(t){return`${t+"PuzzleGeometry 0.1 Copyright 2018 Tomas Rokicki."}\n${t}\n`}writegap(){const t=this.getOrbitsDef(!1),e=[],s=[];for(let n=0;n<t.moveops.length;n++){let o=`M_${T(this.notationMapper,t.movenames[n])}`,i=!1;"'"===o[o.length-1]&&(o=o.substring(0,o.length-1),i=!0),s.push(o),i?e.push(`${o}:=${t.moveops[n].toPerm().inv().toGap()};`):e.push(`${o}:=${t.moveops[n].toPerm().toGap()};`)}e.push("Gen:=["),e.push(s.join(",")),e.push("];");const n=t.solved.identicalPieces();return e.push(`ip:=[${n.map((t=>`[${t.map((t=>t+1)).join(",")}]`)).join(",")}];`),e.push("# Size(Group(Gen));"),e.push("# Size(Stabilizer(Group(Gen), ip, OnTuplesSets));"),e.push(""),this.header("# ")+e.join("\n")}writemathematica(){const t=this.getOrbitsDef(!1),e=[],s=[];e.push(`(* ${this.header("").trim()} *)`);for(let n=0;n<t.moveops.length;n++){let o=`m${T(this.notationMapper,t.movenames[n])}`,i=!1;"'"===o[o.length-1]&&(o=o.substring(0,o.length-1),i=!0),s.push(o),i?e.push(`${o}=${t.moveops[n].toPerm().inv().toMathematica()};`):e.push(`${o}=${t.moveops[n].toPerm().toMathematica()};`)}return e.push(`gen={${s.join(",")}};`),e.join("\n")}writeksolve(t="PuzzleGeometryPuzzle"){const e=this.getOrbitsDef(!1);return this.header("# ")+e.toKsolve(t,this.notationMapper).join("\n")}getKPuzzleDefinition(t=!0,e=!0){const s=this.getOrbitsDef(t,e).toKPuzzleDefinition(e);if(s.experimentalPuzzleDescription=this.puzzleDescription,!s)throw new Error("Missing definition!");return s}getMoveFromBits(t,e,s,n,o,i){const r=[],a=[],h=[];for(const t of this.cubieords)a.push($(t)),h.push(C(t));for(let e=t[0];e<=t[1];e++){const t=n[e];for(let e=0;e<t.length;e+=2*i){const n=t.slice(e,e+2*i),o=this.cubiesetnums[n[0]];for(let t=0;t<n.length;t+=2)n[t]=this.cubieordnums[n[t]];let r=2,l=3;s&&(r=n.length-2,l=n.length-1),a[o]===$(this.cubieords[o])&&(a[o]=a[o].slice(),this.orbitoris[o]>1&&!this.options.fixedOrientation&&(h[o]=h[o].slice()));for(let t=0;t<n.length;t+=2)a[o][n[(t+r)%n.length]]=n[t],this.orbitoris[o]>1&&!this.options.fixedOrientation&&(h[o][n[t]]=(n[(t+l)%n.length]-n[(t+1)%n.length]+2*this.orbitoris[o])%this.orbitoris[o])}}let l=new N($(24),C(24),1);for(let t=0;t<this.cubiesetnames.length;t++)if(!o||o[t])if(1===this.orbitoris[t]||this.options.fixedOrientation)a[t]===$(l.perm.length)?(a[t]!==l.perm&&(l=new N(a[t],h[t],1)),r.push(l)):r.push(new N(a[t],h[t],1));else{const e=new Array(h[t].length);for(let s=0;s<a[t].length;s++)e[s]=h[t][a[t][s]];r.push(new N(a[t],e,this.orbitoris[t]))}let c=new j(r);return 1!==e&&(c=c.mulScalar(e)),c}omitSet(t){for(const e of this.options.excludeOrbits)if(e===t)return!0;return!1}diffmvsets(t,e,s,n){for(let o=0;o<t.length;o+=2){let i=!1;for(let r=0;!i&&r<e.length;r+=2)n?t[o][0]+e[r][1]===s&&t[o][1]+e[r][0]===s&&t[o+1]===e[r+1]&&(i=!0):t[o][0]===e[r][0]&&t[o][1]===e[r][1]&&t[o+1]===e[r+1]&&(i=!0);if(!i)return!0}return!1}getOrbitsDef(t,e=!0){const s=[];if(t)for(let t=0;t<this.cubiesetnames.length;t++)s.push(1);const n=[],o=[],i=[],r=[];for(let t=0;t<this.moveplanesets.length;t++){const e=this.getmovesets(t);i.push(e),this.options.addRotations?r.push(1):r.push(0)}const a=[];for(let t=0;t<this.moveplanesets.length;t++){const e=this.moveplanesets[t].length;let s=!1;const n=i[t];for(let t=0;t<n.length;t+=2)0===n[t][0]&&n[t][1]===e&&(s=!0);a[t]=s}if(this.options.addRotations&&(this.options.moveList||null!==this.options.fixedPieceType)){for(let t=0;t<this.moverotations.length;t++)r[t]=0;for(let t=0;t<this.moveplanesets.length;t++)if(a[t])r[t]=3;else for(let e=0;e<this.moverotations.length;e++){let s=this.moveplanenormals[t];for(let n=1;2*n<=this.movesetorders[e];n++){if(s=s.rotatepoint(this.moverotations[e][0]),r[e]&n)continue;let o=-1,a=!1;for(let t=0;t<this.moveplanenormals.length;t++){if(s.dist(this.moveplanenormals[t])<nt){o=t;break}if(s.dist(this.moveplanenormals[t].smul(-1))<nt){o=t,a=!0;break}}if(o<0)throw new Error("Could not find rotation");const h=i[o];(h.length!==i[t].length||this.moveplanesets[t].length!==this.moveplanesets[o].length||this.diffmvsets(h,i[t],this.moveplanesets[o].length,a))&&(r[e]|=n)}}for(let t=0;t<this.moverotations.length;t++)if(0===r[t])r[t]=1;else if(1===r[t])this.movesetorders[t]>3?r[t]=2:r[t]=0;else{if(3!==r[t])throw new Error("Impossible addrot val");r[t]=0}}for(let t=0;t<this.moveplanesets.length;t++)0===r[t]||a[t]||(i[t].push([0,this.moveplanesets[t].length]),i[t].push(r[t]));for(let t=0;t<this.moveplanesets.length;t++){const e=i[t],n=this.movesetorders[t];for(let t=0;t<e.length;t+=2)for(let s=0;s<t;s+=2)if(e[t][0]===e[s][0]&&e[t][1]===e[s][1])throw new Error("Redundant moves in moveset.");const o=[];for(let t=0;t<e.length;t+=2)for(let s=e[t][0];s<=e[t][1];s++)o[s]=1;const r=this.cmovesbyslice[t];for(let t=0;t<r.length;t++){if(1!==o[t])continue;const e=r[t];for(let t=0;t<e.length;t+=2*n)this.skipcubie(e[t])||(s[this.cubiesetnums[e[t]]]=1)}}for(let t=0;t<this.cubiesetnames.length;t++)s[t]&&(this.omitSet(this.cubiesetnames[t])?s[t]=0:(n.push(this.cubiesetnames[t]),o.push(new P(this.cubieords[t],this.options.fixedOrientation?1:this.orbitoris[t]))));const h=[];for(let e=0;e<this.cubiesetnames.length;e++){if(!s[e])continue;if(this.omitSet(this.cubiesetnames[e]))continue;const n=[],o=[];for(let s=0;s<this.cubieords[e];s++){if(t)n.push(s);else{const t=this.cubiesetcubies[e][s];n.push(this.cubievaluemap[t])}o.push(0)}h.push(new N(n,o,this.options.fixedOrientation?1:this.orbitoris[e]))}const l=[],c=[],f=[],u=[];if(e)for(let t=0;t<this.moveplanesets.length;t++){const e=this.moveplanesets[t].length,n=i[t],o=this.movesetgeos[t];for(let i=0;i<n.length;i+=2){const r=n[i];let a,h=!1;if(void 0!==this.parsedmovelist)for(const s of this.parsedmovelist){if(s[1]!==t)continue;let n=[];n=s[4]?[s[2],s[3]]:[e-s[3],e-s[2]],n[0]===r[0]&&n[1]===r[1]&&(a=s[0],h=!s[4])}if(a)l.push(a),c.push(!0);else{const t=mt(o,r,e);h=t[1];const s=t[0];1===n[i+1]?l.push(s):l.push(s+n[i+1]),c.push(!1)}u.push(0===r[0]&&r[1]===e);const m=this.getMoveFromBits(r,n[i+1],h,this.cmovesbyslice[t],s,this.movesetorders[t]);f.push(m)}}let m=new A(n,o,new G(h),l,f,u,c);return this.options.optimizeOrbits&&(m=m.optimize()),0!==this.options.scrambleAmount&&m.scramble(this.options.scrambleAmount),m}getScramble(t=0){const e=this.getOrbitsDef(!1);return e.toKTransformationData(e.getScrambleTransformation(t))}getMovesAsPerms(){return this.getOrbitsDef(!1).moveops.map((t=>t.toPerm()))}showcanon(t){!function(t,e){const s=t.moveops.length;if(s>30)throw new Error("Canon info too big for bitmask");const n=[],o=[];for(let e=0;e<s;e++){const i=t.moveops[e];n.push(i.order());let r=0;for(let n=0;n<s;n++){if(n===e)continue;const s=t.moveops[n];i.mul(s).equal(s.mul(i))&&(r|=1<<n)}o.push(r)}let i={0:1};for(let t=0;t<100;t++){let s=0;const r={};let a=0;for(const t in i){const e=+t,h=i[e];s+=h,a++;for(let t=0;t<n.length;t++)if(!(e>>t&1||e&o[t]&(1<<t)-1)){const s=e&o[t]|1<<t;void 0===r[s]&&(r[s]=0),r[s]+=(n[t]-1)*h}}e(`${t}: canonseq ${s} states ${a}`),i=r}}(this.getOrbitsDef(!1),t)}getsolved(){const t=[];for(let e=0;e<this.baseFaceCount;e++)for(let s=0;s<this.stickersperface;s++)t.push(e);return new I(t)}getOrientationRotation(t){const[e,[s,n,o]]=t[0],i=new Q(0,s,-n,o),[r,[a,h,l]]=t[1],c=new Q(0,a,-h,l);let f=null,u=null;const m=this.swizzler.unswizzle(e),p=this.swizzler.unswizzle(r);for(const t of this.geonormals)m===t[1]&&(f=t[0]),p===t[1]&&(u=t[0]);if(!f)throw new Error(`Could not find feature ${e}`);if(!u)throw new Error(`Could not find feature ${r}`);const d=f.pointrotation(i);return u.rotatepoint(d).unproject(i).pointrotation(c.unproject(i)).mul(d)}getInitial3DRotation(){const t=this.baseFaceCount;let e=null;if(this.options.puzzleOrientation?e=this.options.puzzleOrientation:this.options.puzzleOrientations&&(e=this.options.puzzleOrientations[t]),e||(e={4:[["FLR",[0,1,0]],["F",[0,0,1]]],6:[["U",[0,1,0]],["F",[0,0,1]]],8:[["U",[0,1,0]],["F",[0,0,1]]],12:[["U",[0,1,0]],["F",[0,0,1]]],20:[["GUQMJ",[0,1,0]],["F",[0,0,1]]]}[t]),!e)throw new Error("No default orientation?");return this.getOrientationRotation(e)}generate2dmapping(t=800,e=500,s=10,n=!1,o=.92){function i(t,e){let s=t[1][0]-t[0][0],n=t[1][1]-t[0][1];const o=2*Math.PI/e,i=Math.cos(o),r=Math.sin(o);for(let o=2;o<e;o++){const e=s*i+n*r;n=n*i-s*r,s=e,t.push([t[o-1][0]+s,t[o-1][1]+n])}}t-=2*s,e-=2*s,this.genperms();const r=this.getboundarygeometry().facenames[0][0].length,a=this.net;if(null===a)throw new Error("No net?");const h={};let l=0,c=0,f=1,u=0;h[a[0][0]]=[[1,0],[0,0]],i(h[a[0][0]],r);for(const t of a){const e=t[0];if(!h[e])throw new Error("Bad edge description; first edge not connected.");for(let s=1;s<t.length;s++){const n=t[s];""===n||h[n]||(h[n]=[h[e][s%r],h[e][(s+r-1)%r]],i(h[n],r))}}for(const t in h){const e=h[t];for(const t of e)l=Math.min(l,t[0]),f=Math.max(f,t[0]),c=Math.min(c,t[1]),u=Math.max(u,t[1])}const m=Math.min(t/(f-l),e/(u-c)),p=.5*(t-m*(f+l)),d=.5*(e-m*(u+c)),g={},b=this.getboundarygeometry(),v={},w=[[m+p,d],[p,d]];v[a[0][0]]=w,i(v[a[0][0]],r),g[this.facenames[0][1]]=this.project2d(0,0,[new Q(0,w[0][0],w[0][1],0),new Q(0,w[1][0],w[1][1],0)]);const y=[];y[0]=0;for(const t of a){const e=t[0];if(!v[e])throw new Error("Bad edge description; first edge not connected.");let s=-1;for(let t=0;t<b.facenames.length;t++)if(e===b.facenames[t][1]){s=t;break}if(s<0)throw new Error(`Could not find first face name ${e}`);const n=b.facenames[s][0];for(let o=1;o<t.length;o++){const a=t[o];if(""===a||v[a])continue;v[a]=[v[e][o%r],v[e][(o+r-1)%r]],i(v[a],r);const h=y[s],l=n[(h+o)%r].sum(n[(h+o+r-1)%r]).smul(.5),c=it(b.edgenames,l),f=pt(b.edgenames[c][1],this.facenames),u=f[e===f[0]?1:0];let m=-1;for(let t=0;t<b.facenames.length;t++)if(u===b.facenames[t][1]){m=t;break}if(m<0)throw new Error("Could not find second face name");const p=b.facenames[m][0];for(let t=0;t<p.length;t++)if(p[t].sum(p[(t+1)%r]).smul(.5).dist(l)<=nt){const s=v[e][(o+r-1)%r],n=v[e][o%r];y[m]=t,g[u]=this.project2d(m,t,[new Q(0,n[0],n[1],0),new Q(0,s[0],s[1],0)]);break}}}let L=0,B=0;const F=this.getInitial3DRotation();for(let t of this.faces){n&&(t=t.rotate(F));for(let e=0;e<t.length;e++)L=Math.max(L,Math.abs(t.get(e).b)),B=Math.max(B,Math.abs(t.get(e).c))}const x=Math.min(e/B/2,(t-s)/L/4);return(i,r)=>{if(n){r=r.rotatepoint(F);const n=.5*s+.25*t,o=this.baseplanes[i].rotateplane(F).d<0?1:-1;return[s+.5*t+o*(n-r.b*x),s+.5*e+r.c*x]}{const t=g[this.facenames[i][1]];return[s+o*r.dot(t[0])+t[2].b,s+e-o*r.dot(t[1])-t[2].c]}}}generatesvg(t=800,e=500,s=10,n=!1){const o=this.generate2dmapping(t,e,s,n);function i(t,e,s){return`<polygon id="${t}" class="sticker" style="fill: ${s}" points="${e.map((t=>`${t[0]} ${t[1]}`)).join(" ")}"/>\n`}const r=this.getsolved(),a=[],h=[];for(let t=0;t<this.baseFaceCount;t++)a[t]=this.colors[this.facenames[t][1]];for(let t=0;t<this.faces.length;t++){const e=this.faces[t],s=Math.floor(t/this.stickersperface),n=[];for(let t=0;t<e.length;t++)n.push(o(s,e.get(t)));h.push(n)}const l=[];for(let t=0;t<this.baseFaceCount;t++){l.push("<g>"),l.push(`<title>${this.facenames[t][1]}</title>\n`);for(let e=0;e<this.stickersperface;e++){const s=t*this.stickersperface+e,n=this.facetocubie[s],o=this.facetoord[s],c=this.cubiesetnums[n],f=this.cubieordnums[n],u=this.graybyori(n)?"#808080":a[r.p[s]];let m=`${this.cubiesetnames[c]}-l${f}-o${o}`;if(l.push(i(m,h[s],u)),this.duplicatedFaces[s])for(let t=1;t<this.duplicatedFaces[s];t++)m=`${this.cubiesetnames[c]}-l${f}-o${t}`,l.push(i(m,h[s],u))}l.push("</g>")}return`<svg id="svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 800 500">\n<style type="text/css"><![CDATA[.sticker { stroke: #000000; stroke-width: 1px; }]]></style>\n${l.join("")}</svg>`}get3d(t){const e=[],s=this.getInitial3DRotation(),o=[],i=.52*this.basefaces[0].get(0).len();for(let t=0;t<this.basefaces.length;t++){const e=this.basefaces[t].rotate(s),n=this.facenames[t][1];o.push({coords:gt(e,i),name:n})}for(let n=0;n<this.faces.length;n++){const o=Math.floor(n/this.stickersperface),r=this.facetocubie[n],a=this.facetoord[n],h=this.cubiesetnums[r],l=this.cubieordnums[r];let c=this.graybyori(r)?t?.darkIgnoredOrbits?"#222222":"#808080":this.colors[this.facenames[o][1]];t?.stickerColors&&(c=t.stickerColors[n]);const f=this.faces[n].rotate(s);e.push({coords:gt(f,i),color:c,orbit:this.cubiesetnames[h],ord:l,ori:a,face:o});let u=f;if(this.duplicatedFaces[n]){const t=u.length/this.duplicatedFaces[n];for(let s=1;s<this.duplicatedFaces[n];s++){for(let e=0;e<t;e++)u=u.rotateforward();e.push({coords:gt(u,i),color:c,orbit:this.cubiesetnames[h],ord:l,ori:s,face:o,isDup:!0})}}}const r=[];for(let t=0;t<this.movesetgeos.length;t++){const e=this.movesetgeos[t],o=this.movesetorders[t];for(const t of this.geonormals)e[0]===t[1]&&e[1]===t[2]&&(r.push({coordinates:dt(t[0].rotatepoint(s),1),quantumMove:new n.yU(e[0]),order:o}),r.push({coordinates:dt(t[0].rotatepoint(s).smul(-1),1),quantumMove:new n.yU(e[2]),order:o}))}const a=this.generate2dmapping(2880,2160,0,!1,1),h=(()=>{const t=s.invrot();return(e,s)=>{let n=new Q(0,s[0]*i,-s[1]*i,s[2]*i);n=n.rotatepoint(t);const o=a(e,n);return o[0]/=2880,o[1]=1-o[1]/2160,o}})().bind(this);return{stickers:e,faces:o,axis:r,unswizzle:this.unswizzle.bind(this),notationMapper:this.notationMapper,textureMapper:{getuv:h}}}getGeoNormal(t){const e=this.getInitial3DRotation(),s=this.swizzler.unswizzle(t);for(const t of this.geonormals)if(s===t[1]){const s=dt(t[0].rotatepoint(e),1);return Math.abs(s[0])<nt&&Math.abs(s[2])<nt&&(s[0]=0,s[2]=1e-6),s}}getfaceindex(t){const e=this.stickersperface;return Math.floor(t/e)}textForTwizzleExplorer(){return`Faces ${this.baseplanerot.length}\nStickers per face ${this.stickersperface}\nShort edge ${this.shortedge}\nCubies ${this.cubies.length}\nEdge distance ${this.edgedistance}\nVertex distance ${this.vertexdistance}`}writeSchreierSims(t){const e=this.getOrbitsDef(!1).reassemblySize();t(`Reassembly size is ${e}`),t("Ratio is "+e/tt(this.getMovesAsPerms(),t))}},vt=class{constructor(t,e){this.pg=t,this.orbitNames=e.orbitnames}orbitNames;lookupMove(t){const e=this.pg.parseMove(t);if(this.pg.parsedmovelist){let t=!1;for(const s of this.pg.parsedmovelist)s[1]===e[1]&&s[2]===e[2]&&s[3]===e[3]&&s[4]===e[4]&&(t=!0);if(!t)return null}let s=[e[2],e[3]];if(!e[4]){const t=this.pg.moveplanesets[e[1]].length;s=[t-e[3],t-e[2]]}const n=this.pg.getMoveFromBits(s,e[5],!e[4],this.pg.cmovesbyslice[e[1]],void 0,this.pg.movesetorders[e[1]]);return A.transformToKTransformationData(this.orbitNames,n)}remapKPuzzleDefinition(t){return function(t,e){const s={...t,moves:{}};for(const[o,i]of Object.entries(t.moves)){let t=o,r="";["v","w"].includes(o.at(-1))&&(t=o.slice(0,-1),r=o.slice(-1));const a=e.notationToExternal(n.yU.fromString(t));if(!a)continue;const h=a+r;if(!h)throw new Error(`Missing external move name for: ${o.toString()}`);s.moves[h.toString()]=i}return s}(t,this.pg.notationMapper)}}}}]);